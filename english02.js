/**
 * @license Copyright 2017 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */
'use strict';const parseCacheControl=require('parse-cache-control');const Audit=require('../audit.js');const NetworkRequest=require('../../lib/network-request.js');const URL=require('../../lib/url-shim.js');const linearInterpolation=require('../../lib/statistics.js').linearInterpolation;const i18n=require('../../lib/i18n/i18n.js');const NetworkRecords=require('../../computed/network-records.js');const UIStrings={title:'Uses efficient cache policy on static assets',failureTitle:'Serve static assets with an efficient cache policy',description:'A long cache lifetime can speed up repeat visits to your page. '+'[Learn more](https://web.dev/uses-long-cache-ttl/).',displayValue:`{itemCount, plural,
    =1 {1 resource found}
    other {# resources found}
    }`,};const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);const IGNORE_THRESHOLD_IN_PERCENT=0.925;class CacheHeaders extends Audit{static get meta(){return{id:'uses-long-cache-ttl',title:str_(UIStrings.title),failureTitle:str_(UIStrings.failureTitle),description:str_(UIStrings.description),scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,requiredArtifacts:['devtoolsLogs'],}}
static get defaultOptions(){return{p10:28*1024,median:128*1024,}}
static getCacheHitProbability(maxAgeInSeconds){const RESOURCE_AGE_IN_HOURS_DECILES=[0,0.2,1,3,8,12,24,48,72,168,8760,Infinity];if(RESOURCE_AGE_IN_HOURS_DECILES.length!==12){throw new Error('deciles 0-10 and 1 for overflow')}
const maxAgeInHours=maxAgeInSeconds/3600;const upperDecileIndex=RESOURCE_AGE_IN_HOURS_DECILES.findIndex(decile=>decile>=maxAgeInHours);if(upperDecileIndex===RESOURCE_AGE_IN_HOURS_DECILES.length-1)return 1;if(upperDecileIndex===0)return 0;const upperDecileValue=RESOURCE_AGE_IN_HOURS_DECILES[upperDecileIndex];const lowerDecileValue=RESOURCE_AGE_IN_HOURS_DECILES[upperDecileIndex-1];const upperDecile=upperDecileIndex/10;const lowerDecile=(upperDecileIndex-1)/10;return linearInterpolation(lowerDecileValue,lowerDecile,upperDecileValue,upperDecile,maxAgeInHours)}
static computeCacheLifetimeInSeconds(headers,cacheControl){if(cacheControl&&cacheControl['max-age']!==undefined){return cacheControl['max-age']}
const expiresHeaders=headers.get('expires');if(expiresHeaders){const expires=new Date(expiresHeaders).getTime();if(!expires)return 0;return Math.ceil((expires-Date.now())/1000)}
return null}
static isCacheableAsset(record){const CACHEABLE_STATUS_CODES=new Set([200,203,206]);const STATIC_RESOURCE_TYPES=new Set([NetworkRequest.TYPES.Font,NetworkRequest.TYPES.Image,NetworkRequest.TYPES.Media,NetworkRequest.TYPES.Script,NetworkRequest.TYPES.Stylesheet,]);if(NetworkRequest.isNonNetworkRequest(record))return!1;return(CACHEABLE_STATUS_CODES.has(record.statusCode)&&STATIC_RESOURCE_TYPES.has(record.resourceType||'Other'))}
static shouldSkipRecord(headers,cacheControl){if(!cacheControl&&(headers.get('pragma')||'').includes('no-cache')){return!0}
if(cacheControl&&(cacheControl['must-revalidate']||cacheControl['no-cache']||cacheControl['no-store']||cacheControl['private'])){return!0}
return!1}
static audit(artifacts,context){const devtoolsLogs=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];return NetworkRecords.request(devtoolsLogs,context).then(records=>{const results=[];let totalWastedBytes=0;for(const record of records){if(!CacheHeaders.isCacheableAsset(record))continue;const headers=new Map();for(const header of record.responseHeaders||[]){if(headers.has(header.name.toLowerCase())){const previousHeaderValue=headers.get(header.name.toLowerCase());headers.set(header.name.toLowerCase(),`${previousHeaderValue}, ${header.value}`)}else{headers.set(header.name.toLowerCase(),header.value)}}
const cacheControl=parseCacheControl(headers.get('cache-control'));if(this.shouldSkipRecord(headers,cacheControl)){continue}
let cacheLifetimeInSeconds=CacheHeaders.computeCacheLifetimeInSeconds(headers,cacheControl);if(cacheLifetimeInSeconds!==null&&(!Number.isFinite(cacheLifetimeInSeconds)||cacheLifetimeInSeconds<=0)){continue}
cacheLifetimeInSeconds=cacheLifetimeInSeconds||0;const cacheHitProbability=CacheHeaders.getCacheHitProbability(cacheLifetimeInSeconds);if(cacheHitProbability>IGNORE_THRESHOLD_IN_PERCENT)continue;const url=URL.elideDataURI(record.url);const totalBytes=record.transferSize||0;const wastedBytes=(1-cacheHitProbability)*totalBytes;totalWastedBytes+=wastedBytes;let debugData;if(cacheControl){debugData={type:'debugdata',...cacheControl,}}
results.push({url,debugData,cacheLifetimeMs:cacheLifetimeInSeconds*1000,cacheHitProbability,totalBytes,wastedBytes,})}
results.sort((a,b)=>{return a.cacheLifetimeMs-b.cacheLifetimeMs||b.totalBytes-a.totalBytes||a.url.localeCompare(b.url)});const score=Audit.computeLogNormalScore({p10:context.options.p10,median:context.options.median},totalWastedBytes);const headings=[{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},{key:'cacheLifetimeMs',itemType:'ms',text:str_(i18n.UIStrings.columnCacheTTL),displayUnit:'duration'},{key:'totalBytes',itemType:'bytes',text:str_(i18n.UIStrings.columnTransferSize),displayUnit:'kb',granularity:1},];const summary={wastedBytes:totalWastedBytes};const details=Audit.makeTableDetails(headings,results,summary);return{score,numericValue:totalWastedBytes,numericUnit:'byte',displayValue:str_(UIStrings.displayValue,{itemCount:results.length}),details,}})}}
module.exports=CacheHeaders;module.exports.UIStrings=UIStrings